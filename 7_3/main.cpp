// 占位参数与默认参数值搭配兼容C不规范写法
#include <stdio.h>

// 在C中int func()是可以接受任意参数的，所以在后来的调用中可能
// 出现func(1)、func(2, 3)等不同的调用，而这样的代码在C++中是
// 错误的，所以为了兼容C语言这种不规范的写法，可以给func提供两个
// 占用参数如func(int = 0,int = 0)，则前面的两种调用就合法了，
// 这样花很少的代价，就可以让C的代码可以在C++中使用。让人感觉仿
// 佛C++也可以像C语言一样，接受任意个参数了！

// 占位参数，且默认值为0，就不仅func(2, 3)可以
// func()  func(1) 都可以,这样最小代价就能够直接移植过来
int func(int x = 0, int = 0);

int main()
{
    printf("%d\n", func());       // 0
    printf("%d\n", func(1));      // 1
    printf("%d\n", func(2, 3));   // 2

    return 0;
}

// 第2个参数为占位参数（没参数名），因此在函数内部也就无法使用
// 这个参数，只起到占位的作用，定义中参数不写出默认值
int func(int x, int)
{
    return x;
}
